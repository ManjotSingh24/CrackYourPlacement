/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

/*
jdo middle find out krn ahoe kisi unknown length cheex da use hare and tortoise method 
kyonki jdon hare pura link list maap ly ga tortoise half ty hoega ohnu hi ap any return kar dena g
*/

class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode* slow=head;
        ListNode* fast=head;
        while(fast!=NULL && fast->next!=NULL) // fast da next null odd length dy time hoega ty fast null even lengthh dy time hoega
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow;
    }
};
