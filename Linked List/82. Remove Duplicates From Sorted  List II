/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {

        if(!head || !head->next) // 0 or single node
        return head;

        ListNode* dummy_head=new ListNode(0);
        dummy_head->next=head;

        ListNode*prev=dummy_head;
        ListNode *curr=head;


        while(curr)
        {
        if(curr->next!=NULL && curr->val==curr->next->val)
        {
            int a=curr->val;
            while(curr && curr->val==a)
            {
                curr=curr->next;
            }
            prev->next=curr;
        }
        else
        {
            prev=curr;
            curr=curr->next;
        }
        }

        return dummy_head->next;
    }
};
