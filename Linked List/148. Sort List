/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    //NOTE ; ths is modiied hare and tortoise method we get first middle in case of even no. of nodes kyonki erge sort ch  4 nodeds hai so 2 2  ch divide krna paina
    //ihdy vasty fisrt mid chahida na ki 2d mid jo ki 3rd node hai --> node1 -> node2 --> null &&  NOde3->node4 --> NULL
    ListNode* findmiddle(ListNode* head)
    {
        ListNode* slow=head;
        ListNode* fast=head->next;
        
        while(fast!=NULL && fast->next!=NULL)
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow;
    }


    //ehe sepaertae q haiga merge two sorted LL
    ListNode* mergeTwoLists(ListNode* list1,ListNode* list2)
    {
        ListNode* dummy=new ListNode(-1);
        ListNode* temp=dummy;

        while(list1!=NULL && list2!=NULL) // jdo tak dona cho koi ik null nhi ho jand itan tak copare kro g
        {
            if(list1->val<list2->val)
            {
                temp->next=list1;
                temp=list1;
                list1=list1->next;
            }
            else
            {
                temp->next=list2;
                temp=list2;
                list2=list2->next;
            }
        }

        if(list1) //may be lsit1 di kebgth +1 hoy 
        temp->next=list1;
        else//vice versa
        temp->next=list2;

        return dummy->next;

    }



    ListNode* sortList(ListNode* head) {
        
        //if no or one node
        if(!head || !head->next)
        return head;

        ListNode* mid=findmiddle(head);

        // make two linked lists
        ListNode* left=head;
        ListNode* right=mid->next;
        //seperate two linked lists
        mid->next=NULL;

        //recsusivly call the function agai
        left=sortList(left);
        right=sortList(right);

        return mergeTwoLists(left,right);//head nhi chahida kyonk head hi left hai

    }
};
