/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        //base case
        if(!head || !head->next) // ya tan no node or single node
        return head;

        ListNode* odd=head;
        ListNode* even=head->next;
        //last ch sanu od to even nal jodna jo hai
        ListNode* evenhead=even;

        while(even!=NULL && even->next!=NULL) // odd di condition chk na kro kynki even asi odd to agy kita hoya
        {
            odd->next=odd->next->next;
            odd=odd->next;

            even->next=even->next->next;
            even=even->next;
        }

        odd->next=evenhead;
        return head;


    }
};
