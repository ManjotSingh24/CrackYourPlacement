/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
        // manipulate the linked list 1 ohdy ch result pado
        int carry=0;
        ListNode* temp1=l1;
        ListNode* temp2=l2;
        ListNode* dummyhead=new ListNode(-1);
        ListNode* curr=dummyhead;
         while(temp1 && temp2)
         {
            int s= (carry+temp1->val+temp2->val);
            int sum=s%10;
            carry=s/10;
            curr->next= new ListNode(sum);
            curr=curr->next;
            temp1=temp1->next;
            temp2=temp2->next;

         }
         while(temp1!=NULL)
         {
            int summ=(carry+temp1->val);
            int a=summ%10;
            carry=summ/10;
            curr->next=new ListNode(a);
            curr=curr->next;
            temp1=temp1->next;
         }
         while(temp2!=NULL)
         {
            int summm=(carry+temp2->val);
            int b=summm%10;
            carry=summm/10;
            curr->next=new ListNode(b);
            curr=curr->next;
            temp2=temp2->next;
         }
         if(carry==1)
         {
            curr->next=new ListNode(carry);
            curr=curr->next;
         }


         return dummyhead->next;
    }
};
