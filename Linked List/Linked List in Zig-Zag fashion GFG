class Solution {
  public:
    Node* zigZag(Node* head) {
        // your code goes here
        if(!head->next || !head)
        return head;
        
        bool flag=true; // true  we need <= relationship if we get > then swap , flag is false we need >= equality 
        Node* curr=head;
        
        while(curr->next) //node next is karky kyonki oho sany node and node next compare krny a 
        {
           if(flag==true && curr->data>curr->next->data)
           {
               //swap
               int temp=curr->data;
               curr->data=curr->next->data;
               curr->next->data=temp;
           }
           if(flag==false && curr->data<curr->next->data)
           {
               //swap
               int temp=curr->data;
               curr->data=curr->next->data;
               curr->next->data=temp;
           }
           flag=(!flag);
           curr=curr->next;
           
        }
        return head;
        
    }
};
