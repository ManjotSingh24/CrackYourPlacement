/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    ListNode* reverseLL(ListNode * head)
    {
        if(!head || !head->next) // null or 1 node
        return head;


        ListNode* last=reverseLL(head->next);
        head->next->next=head;
        head->next=NULL;
        return last;
    }


    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        l1 = reverseLL(l1);
        l2 = reverseLL(l2);

        int sum=0;
        int carry=0;

        ListNode* ans=new ListNode(); //new node
        while(l1 || l2)
        {
            if(l1!=NULL)
            {
                sum+=l1->val;
                l1=l1->next;
            }
            if(l2!=NULL)
            {
                sum+=l2->val;
                l2=l2->next;
            }

            //main kam
            ans->val=(sum%10);
            carry=sum/10;

            ListNode* newnode=new ListNode(carry);
            newnode->next=ans;
            ans=newnode;
            sum=carry;//taki carry hun next sum jo nodes da kadna ohdy ch v add hojy

        }
        return (carry==0)?ans->next:ans; //very imp line agar cary 0 hai then newnode ch 0 hai so oh 0 kyon hi chhida


    }
};
