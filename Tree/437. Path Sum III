/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    // case 2 banangy jdo left ch gy and sum - karky , right ty gye but sum - karky
    int fun(TreeNode* node,long long sum)
    {
        if(node==nullptr)return 0;

        int res=0;
        if(node->val==sum)
        res++;

        res+=fun(node->left,sum-node->val);
        res+=fun(node->right,sum-node->val);
        return res;

    }

    int pathSum(TreeNode* root, int targetSum) {
        if(root==NULL)
        return 0;
    // case when root sum ch add nhi kita and rleft ty chky gy eda hi + (fun) + case when root sum ch add nhi kita and right ty chky gy eda hi 
        return pathSum(root->left,targetSum)+fun(root,targetSum)+pathSum(root->right,targetSum);



    }
};
