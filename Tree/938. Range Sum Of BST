/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
// dont just inorder post or pre oredr --> O(n) 
// use property of BST to traverse less
    void fun(TreeNode* root,int low,int high, int &sum)
    {
        if(root==NULL)
        return;

        // Node range ch hegi a means mein edi left and right ty tan javanga hi javanga
        if(root->val>=low && root->val<=high)
        {
        sum+=root->val;
        fun(root->left,low,high,sum);
        fun(root->right,low,high,sum);
        }

        //else nhi pana tan v ok hai code hun node arneg to bhar hai check kro kis side to bhar hai ohdy oppsote side nodes visit karo
        else
        {
        if(root->val<low)
        fun(root->right,low,high,sum);

        if(root->val>high)
        fun(root->left,low,high,sum);
        }
    }

    int rangeSumBST(TreeNode* root, int low, int high) {
        int sum=0;
        fun(root,low,high,sum);
        return sum;
    }
};
