/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    // har level ka sabsy right vala node
    // BFS lado
    vector<int> rightSideView(TreeNode* root) 
    {

        //base case
        if(root==NULL)
        return {};

        queue<TreeNode*>q;
        q.push(root);
        vector<int> ans;
        int node;
        while(!q.empty())
        {
            int n=q.size();
            while(n--) //i slevel dy sary node kad lai queue chon
            {
                TreeNode* currnode=q.front();
                q.pop();
                if(currnode->left!=NULL)q.push(currnode->left);
                if(currnode->right)q.push(currnode->right);
                node=currnode->val;

            }
            //hun node ch is current level da right most elemnthai ohnu hi vector ch pado
            ans.push_back(node);
        }

        return ans;

        
    }
};
