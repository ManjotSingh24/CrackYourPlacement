/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    bool fun(long lower,TreeNode* root, long higher)
    {
        if(!root)
        return true;
        //STRICTLY INCRESING FROM LEFT AND STRICTLY DECREASING FROM RIGHT
        //phly tan eda hi chk kro if false hai edron hi return mardo
        if(root->val >= higher || root->val <= lower) //means range dy andar nhi hai ya <= lesser hai ya >= the n greater hai
        return false;

        if(root->left!=NULL)
        {
           if(fun(lower,root->left,root->val)==false)
           return false;
        }

        if(root->right!=NULL)
        {
           if(fun(root->val,root->right,higher)==false)
           return false;
        }

        return true;//bhai sari conditions satisfy kr ri hai

    }

    //range dedo binary sear ch tree ch lower an higher

    bool isValidBST(TreeNode* root) {

        return fun(LONG_MIN,root,LONG_MAX);
    }
};
