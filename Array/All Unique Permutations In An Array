class Solution {
  public:
  
    void fun(vector<int> &arr,vector<vector<int>>&ans,set<vector<int>>&st,int index)
    {
        
        int n=arr.size();
        
        //base case
        
        if(index==n)
        {
        if(st.find(arr)==st.end())
        {
        ans.push_back(arr);
        st.insert(arr);
        return;
        }
        }
        
        
        for(int i=index;i<n;i++)
        {
            swap(arr[i],arr[index]);
            //recrisve call
            fun(arr,ans,st,index+1); //next index that is index +1 ty try kro
            
            //backtracking
            swap(arr[i],arr[index]);
            
        }
               
    }
  
  
  
    vector<vector<int>> uniquePerms(vector<int> &arr ,int n) {
        // code here
        //main tan swapping hi krni bs
        vector<vector<int>>ans;
        set<vector<int>>st;
        
        fun(arr,ans,st,0);
        sort(ans.begin(),ans.end());
        return ans;
    }
};
